# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java Service with Maven
on:
  push:
    branches: [ feature-* ]
  pull_request:
    branches: [ develop ]
jobs:
  secret_scan:
    runs-on: ubuntu-latest
    name: Find secrets
    steps:
    # Checkout the source code so we have some files to look at.
    - uses: actions/checkout@v2
    # Run the secrets finder
    - name: secrets finder
      uses: govindarajanv/secrets-finder@v2.6
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  test:
    name: Unit Test
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Maven Verify
      run: mvn -B clean verify
  coverage:
    name: Code Coverage
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Code Coverage using jacoco
      run: |
        mvn -B clean verify
        #mvn jacoco:report
        curl -s https://codecov.io/bash|bash
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  validate:
    name: Build and Test Image    
    runs-on: ubuntu-latest
  
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Maven Install
      run: mvn -B clean install
    - name: Build Container Image
      run: |
        sudo apt-get install libxml2-utils
        VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
        docker build -t govindarajanv/java-maven-quickstart-service:$VERSION --build-arg value=$VERSION .
        docker build -t govindarajanv/java-maven-quickstart-service:latest --build-arg value=$VERSION .
        docker images
    - name: Test Image
      run: |
        VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
        docker-compose build --build-arg version=$VERSION java-maven-service
        docker-compose up -d
        docker ps
        sleep 60
        docker ps
        result=$(docker inspect --format='{{json .State.Health}}' calculator| jq ."Status")
        if [ $result != "\"healthy\"" ]; then exit 1; fi        
    - name: Shut down the service
      run: docker-compose down
